name: DeployAppGwStaticWebApp

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  create-stapp-and-appgw:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4
      # Log into Azure
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # Deploy ARM template for creating the Static Web App
      - name: Run Bicep deploy
        uses: azure/arm-deploy@v1
        id: run_bicep_deploy
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.RESOURCE_GROUP }}
          template: ./bicep/main.bicep
          parameters: ./bicep/main.bicepparam
          scope: resourcegroup
    outputs:
      staticWebAppNameProduction: ${{ steps.run_bicep_deploy.outputs.staticWebAppNameProduction }}
      staticWebAppNameStaging: ${{ steps.run_bicep_deploy.outputs.staticWebAppNameStaging }}
  
  deploy_production_job:
    needs: create-stapp-and-appgw
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      # Log into Azure
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Azure CLI script
        uses: azure/CLI@v1
        id: deployment_token
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name ${{ needs.create-stapp-and-appgw.outputs.staticWebAppNameProduction }} --resource-group ${{ vars.RESOURCE_GROUP }} | jq -r '.properties.apiKey')
            echo ::add-mask::$APIKEY
            echo APIKEY="$APIKEY" >> $GITHUB_ENV                              
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.APIKEY }} 
          action: "upload"
          ###### Repository/Build Configurations ######
          app_location: "src/production" # App source code path relative to repository root

  deploy_staging_job:
    needs: create-stapp-and-appgw
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      # Log into Azure
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Azure CLI script
        uses: azure/CLI@v1
        id: deployment_token
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name ${{ needs.create-stapp-and-appgw.outputs.staticWebAppNameStaging }} --resource-group ${{ vars.RESOURCE_GROUP }} | jq -r '.properties.apiKey')
            echo ::add-mask::$APIKEY
            echo APIKEY="$APIKEY" >> $GITHUB_ENV                              
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.APIKEY }} 
          action: "upload"
          ###### Repository/Build Configurations ######
          app_location: "src/staging" # App source code path relative to repository root
